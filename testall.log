/usr/bin/lli

###### Testing test-boolAssign
./matcat.native tests/test-boolAssign.mc > test-boolAssign.ll
llc -relocation-model=pic test-boolAssign.ll > test-boolAssign.s
cc -o test-boolAssign.exe test-boolAssign.s
./test-boolAssign.exe
diff -b test-boolAssign.out tests/test-boolAssign.out > test-boolAssign.diff
###### SUCCESS

###### Testing test-comparison
./matcat.native tests/test-comparison.mc > test-comparison.ll
llc -relocation-model=pic test-comparison.ll > test-comparison.s
cc -o test-comparison.exe test-comparison.s
./test-comparison.exe
diff -b test-comparison.out tests/test-comparison.out > test-comparison.diff
FAILED test-comparison.out differs from tests/test-comparison.out
###### FAILED

###### Testing test-for1
./matcat.native tests/test-for1.mc > test-for1.ll
llc -relocation-model=pic test-for1.ll > test-for1.s
cc -o test-for1.exe test-for1.s
./test-for1.exe
diff -b test-for1.out tests/test-for1.out > test-for1.diff
###### SUCCESS

###### Testing test-for2
./matcat.native tests/test-for2.mc > test-for2.ll
Fatal error: exception Parsing.Parse_error
###### FAILED

###### Testing test-for3
./matcat.native tests/test-for3.mc > test-for3.ll
Fatal error: exception Parsing.Parse_error
###### FAILED

###### Testing test-ifelse1
./matcat.native tests/test-ifelse1.mc > test-ifelse1.ll
Fatal error: exception Parsing.Parse_error
###### FAILED

###### Testing test-ifelse2
./matcat.native tests/test-ifelse2.mc > test-ifelse2.ll
llc -relocation-model=pic test-ifelse2.ll > test-ifelse2.s
cc -o test-ifelse2.exe test-ifelse2.s
./test-ifelse2.exe
diff -b test-ifelse2.out tests/test-ifelse2.out > test-ifelse2.diff
FAILED test-ifelse2.out differs from tests/test-ifelse2.out
###### FAILED

###### Testing test-ifelse3
./matcat.native tests/test-ifelse3.mc > test-ifelse3.ll
llc -relocation-model=pic test-ifelse3.ll > test-ifelse3.s
cc -o test-ifelse3.exe test-ifelse3.s
./test-ifelse3.exe
diff -b test-ifelse3.out tests/test-ifelse3.out > test-ifelse3.diff
###### SUCCESS

###### Testing test-print
./matcat.native tests/test-print.mc > test-print.ll
llc -relocation-model=pic test-print.ll > test-print.s
cc -o test-print.exe test-print.s
./test-print.exe
diff -b test-print.out tests/test-print.out > test-print.diff
###### SUCCESS

###### Testing test-printb
./matcat.native tests/test-printb.mc > test-printb.ll
llc -relocation-model=pic test-printb.ll > test-printb.s
cc -o test-printb.exe test-printb.s
./test-printb.exe
diff -b test-printb.out tests/test-printb.out > test-printb.diff
###### SUCCESS

###### Testing test-printstring
./matcat.native tests/test-printstring.mc > test-printstring.ll
llc -relocation-model=pic test-printstring.ll > test-printstring.s
cc -o test-printstring.exe test-printstring.s
./test-printstring.exe
###### FAILED

###### Testing test-while1
./matcat.native tests/test-while1.mc > test-while1.ll
llc -relocation-model=pic test-while1.ll > test-while1.s
cc -o test-while1.exe test-while1.s
./test-while1.exe
diff -b test-while1.out tests/test-while1.out > test-while1.diff
###### SUCCESS

###### Testing test-while2
./matcat.native tests/test-while2.mc > test-while2.ll
llc -relocation-model=pic test-while2.ll > test-while2.s
cc -o test-while2.exe test-while2.s
./test-while2.exe
diff -b test-while2.out tests/test-while2.out > test-while2.diff
###### SUCCESS

###### Testing fail-assign1
./matcat.native < tests/fail-assign1.mc 2> fail-assign1.err >> testall.log
diff -b fail-assign1.err tests/fail-assign1.err > fail-assign1.diff
###### SUCCESS

###### Testing fail-assign2
./matcat.native < tests/fail-assign2.mc 2> fail-assign2.err >> testall.log
diff -b fail-assign2.err tests/fail-assign2.err > fail-assign2.diff
###### SUCCESS

###### Testing fail-assign3
./matcat.native < tests/fail-assign3.mc 2> fail-assign3.err >> testall.log
diff -b fail-assign3.err tests/fail-assign3.err > fail-assign3.diff
###### SUCCESS

###### Testing fail-for1
./matcat.native < tests/fail-for1.mc 2> fail-for1.err >> testall.log
diff -b fail-for1.err tests/fail-for1.err > fail-for1.diff
###### SUCCESS

###### Testing fail-for2
./matcat.native < tests/fail-for2.mc 2> fail-for2.err >> testall.log
diff -b fail-for2.err tests/fail-for2.err > fail-for2.diff
###### SUCCESS

###### Testing fail-for3
./matcat.native < tests/fail-for3.mc 2> fail-for3.err >> testall.log
diff -b fail-for3.err tests/fail-for3.err > fail-for3.diff
###### SUCCESS

###### Testing fail-for4
./matcat.native < tests/fail-for4.mc 2> fail-for4.err >> testall.log
diff -b fail-for4.err tests/fail-for4.err > fail-for4.diff
###### SUCCESS

###### Testing fail-for5
./matcat.native < tests/fail-for5.mc 2> fail-for5.err >> testall.log
diff -b fail-for5.err tests/fail-for5.err > fail-for5.diff
###### SUCCESS

###### Testing fail-helloworld1
./matcat.native < tests/fail-helloworld1.mc 2> fail-helloworld1.err >> testall.log
diff -b fail-helloworld1.err tests/fail-helloworld1.err > fail-helloworld1.diff
###### SUCCESS

###### Testing fail-ifelse1
./matcat.native < tests/fail-ifelse1.mc 2> fail-ifelse1.err >> testall.log
diff -b fail-ifelse1.err tests/fail-ifelse1.err > fail-ifelse1.diff
FAILED fail-ifelse1.err differs from tests/fail-ifelse1.err
###### FAILED

###### Testing fail-ifelse2
./matcat.native < tests/fail-ifelse2.mc 2> fail-ifelse2.err >> testall.log
diff -b fail-ifelse2.err tests/fail-ifelse2.err > fail-ifelse2.diff
FAILED fail-ifelse2.err differs from tests/fail-ifelse2.err
###### FAILED

###### Testing fail-ifelse3
./matcat.native < tests/fail-ifelse3.mc 2> fail-ifelse3.err >> testall.log
diff -b fail-ifelse3.err tests/fail-ifelse3.err > fail-ifelse3.diff
FAILED fail-ifelse3.err differs from tests/fail-ifelse3.err
###### FAILED

###### Testing fail-while1
./matcat.native < tests/fail-while1.mc 2> fail-while1.err >> testall.log
diff -b fail-while1.err tests/fail-while1.err > fail-while1.diff
FAILED fail-while1.err differs from tests/fail-while1.err
###### FAILED

###### Testing fail-while2
./matcat.native < tests/fail-while2.mc 2> fail-while2.err >> testall.log
; ModuleID = 'MatCat'
source_filename = "MatCat"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.1 = private unnamed_addr constant [4 x i8] c"%g\0A\00"
@fmt.2 = private unnamed_addr constant [4 x i8] c"%s\0A\00"
@fmt.3 = private unnamed_addr constant [4 x i8] c"%g\0A\00"
@fmt.4 = private unnamed_addr constant [4 x i8] c"%g \00"
@fmt.5 = private unnamed_addr constant [2 x i8] c"\0A\00"

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %b = alloca i1
  br label %while

while:                                            ; preds = %while_body, %entry
  %b1 = load i1, i1* %b
  br i1 %b1, label %while_body, label %merge

while_body:                                       ; preds = %while
  br label %while

merge:                                            ; preds = %while
  ret i32 0
}
###### FAILED

###### Testing fail-while3
./matcat.native < tests/fail-while3.mc 2> fail-while3.err >> testall.log
; ModuleID = 'MatCat'
source_filename = "MatCat"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.1 = private unnamed_addr constant [4 x i8] c"%g\0A\00"
@fmt.2 = private unnamed_addr constant [4 x i8] c"%s\0A\00"
@fmt.3 = private unnamed_addr constant [4 x i8] c"%g\0A\00"
@fmt.4 = private unnamed_addr constant [4 x i8] c"%g \00"
@fmt.5 = private unnamed_addr constant [2 x i8] c"\0A\00"

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %b = alloca i1
  br label %while

while:                                            ; preds = %while_body, %entry
  store i1 false, i1* %b
  br i1 false, label %while_body, label %merge

while_body:                                       ; preds = %while
  br label %while

merge:                                            ; preds = %while
  ret i32 0
}
###### FAILED
